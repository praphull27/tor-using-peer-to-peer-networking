node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth1
	 ip address 10.0.1.20/32
	 ipv6 address 2001:1::20/128
	!
	interface eth0
	 ip address 10.0.0.20/24
	 ipv6 address 2001:0::20/64
	!
    }
    canvas c1
    iconcoords {916.0 348.0}
    labelcoords {916.0 380.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n3 {
    type router
    model PC
    network-config {
	hostname n3
	!
	interface eth1
	 ip address 10.0.1.21/32
	 ipv6 address 2001:1::21/128
	!
	interface eth0
	 ip address 10.0.0.21/24
	 ipv6 address 2001:0::21/64
	!
    }
    canvas c1
    iconcoords {772.0 420.0}
    labelcoords {772.0 452.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n4 {
    type router
    model PC
    network-config {
	hostname n4
	!
	interface eth1
	 ip address 10.0.1.22/32
	 ipv6 address 2001:1::22/128
	!
	interface eth0
	 ip address 10.0.0.22/24
	 ipv6 address 2001:0::22/64
	!
    }
    canvas c1
    iconcoords {772.0 96.0}
    labelcoords {772.0 128.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n5 {
    type wlan
    network-config {
	hostname n5
	!
	interface wireless
	 ip address 10.0.1.0/32
	 ipv6 address 2001:1::0/128
	!
	mobmodel
	coreapi
	basic_range
	ns2script
	!
    }
    custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=330.88235294117646
	bandwidth=54000000
	jitter=0
	delay=20000
	error=0
	}
    }
    custom-config {
	custom-config-id ns2script
	custom-command {10 3 11 10 10 10 10 10}
	config {
	file=/home/praphull/Desktop/TOR_Project/Working/Mobility_8_No_Sharing.scen
	refresh_ms=50
	loop=1
	autostart=
	map=
	script_start=
	script_pause=
	script_stop=
	}
    }
    canvas c1
    iconcoords {452.0 266.0}
    labelcoords {452.0 298.0}
    interface-peer {e0 n2}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
    interface-peer {e3 n1}
    interface-peer {e4 n1}
    interface-peer {e5 n6}
    interface-peer {e6 n6}
    interface-peer {e7 n7}
    interface-peer {e8 n7}
    interface-peer {e9 n8}
    interface-peer {e10 n8}
    interface-peer {e11 n9}
    interface-peer {e12 n9}
}

node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth1
	 ip address 10.0.0.24/24
	 ipv6 address 2001:0::24/64
	!
	interface eth0
	 ip address 10.0.0.23/24
	 ipv6 address 2001:0::23/64
	!
    }
    canvas c1
    iconcoords {880.0 228.0}
    labelcoords {880.0 260.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n6 {
    type router
    model PC
    network-config {
	hostname n6
	!
	interface eth1
	 ip address 10.0.0.25/24
	 ipv6 address 2001:0::25/64
	!
	interface eth0
	 ip address 10.0.0.24/24
	 ipv6 address 2001:0::24/64
	!
    }
    canvas c1
    iconcoords {380.0 228.0}
    labelcoords {380.0 260.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n7 {
    type router
    model PC
    network-config {
	hostname n7
	!
	interface eth1
	 ip address 10.0.0.26/24
	 ipv6 address 2001:0::26/64
	!
	interface eth0
	 ip address 10.0.0.25/24
	 ipv6 address 2001:0::25/64
	!
    }
    canvas c1
    iconcoords {416.0 348.0}
    labelcoords {416.0 380.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n8 {
    type router
    model PC
    network-config {
	hostname n8
	!
	interface eth1
	 ip address 10.0.0.27/24
	 ipv6 address 2001:0::27/64
	!
	interface eth0
	 ip address 10.0.0.26/24
	 ipv6 address 2001:0::26/64
	!
    }
    canvas c1
    iconcoords {272.0 420.0}
    labelcoords {272.0 452.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

node n9 {
    type router
    model PC
    network-config {
	hostname n9
	!
	interface eth1
	 ip address 10.0.0.28/24
	 ipv6 address 2001:0::28/64
	!
	interface eth0
	 ip address 10.0.0.27/24
	 ipv6 address 2001:0::27/64
	!
    }
    canvas c1
    iconcoords {272.0 96.0}
    labelcoords {272.0 128.0}
    interface-peer {eth0 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/run/resolvconf', '/home/praphull/.tor', )
	files=('/run/resolvconf/resolv.conf', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:/run/resolvconf/resolv.conf
	custom-command /run/resolvconf/resolv.conf
	config {
	nameserver 8.8.8.8
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 172.16.0.254
	
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth1 n5}
}

link l4 {
    nodes {n5 n2}
    bandwidth 0
}

link l5 {
    nodes {n5 n3}
    bandwidth 0
}

link l6 {
    nodes {n5 n4}
    bandwidth 0
}

link l1 {
    nodes {n5 n1}
    bandwidth 0
}

link l2 {
    nodes {n5 n6}
    bandwidth 0
}

link l3 {
    nodes {n5 n7}
    bandwidth 0
}

link l7 {
    nodes {n5 n8}
    bandwidth 0
}

link l8 {
    nodes {n5 n9}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

hook 4:runtime_hook_nat.sh {
#!/bin/sh
SRCNET=172.16.0.0/24
OUTDEV=eth0

IPADDR=`/sbin/ip -4 addr show dev $OUTDEV | grep inet | awk '{ print $2; }' | awk -F / '{ print $1; }'`

echo "Turning IP forwarding ON"
sysctl -w net.ipv4.ip_forward=1

echo "Setting up source NAT from $SRCNET to $OUTDEV:$IPADDR"

iptables -t nat -A POSTROUTING -s $SRCNET -o $OUTDEV -j SNAT --to $IPADDR









}

hook 5:datacollect_hook_nat.sh {
#!/bin/sh
SRCNET=172.16.0.0/24
OUTDEV=eth0

IPADDR=`/sbin/ip -4 addr show dev $OUTDEV | grep inet | awk '{ print $2; }' | awk -F / '{ print $1; }'`


iptables -t nat -D POSTROUTING -s $SRCNET -o $OUTDEV -j SNAT --to $IPADDR









}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
    controlnet=172.16.0.0/24
    enablerj45=1
    enablesdt=0
    preservedir=0
}

